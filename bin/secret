#!/bin/bash

DIR="$(dirname "$0")"
. "${DIR}/config"

# create keyring and key
# TODO: handle if already exists
# Q: Refactor to GCS bucket encryption to avoid KMS cost?
gcloud kms keyrings create $INSTANCE \
    --location global

# TODO: handle if already exists
gcloud kms keys create config \
      --location global \
      --keyring $INSTANCE \
      --purpose encryption

# encrypt certs
gcloud kms encrypt \
    --key config \
    --keyring $INSTANCE \
    --location global \
    --plaintext-file "${CONF_DIR}/ca.pem" \
    --ciphertext-file "${CONF_DIR}/encrypted-ca.pem"

gcloud kms encrypt \
    --key config \
    --keyring $INSTANCE \
    --location global \
    --plaintext-file "${CONF_DIR}/client.pem" \
    --ciphertext-file "${CONF_DIR}/encrypted-client.pem"

gcloud kms encrypt \
    --key config \
    --keyring $INSTANCE \
    --location global \
    --plaintext-file "${CONF_DIR}/client.key" \
    --ciphertext-file "${CONF_DIR}/encrypted-client.key"

# create GCS bucket and copy there the encrypted certs
# TODO: handle if already exists
gsutil mb "gs://${CONF_BUCKET}"

# move the encrupted certs to the above created bucket
gsutil cp "${CONF_DIR}/encrypted-ca.pem" "gs://${CONF_BUCKET}/ca.pem"
gsutil cp "${CONF_DIR}/encrypted-client.pem" "gs://${CONF_BUCKET}/client.pem"
gsutil cp "${CONF_DIR}/encrypted-client.key" "gs://${CONF_BUCKET}/client.key"

echo "Your certificates have been saved in: "
echo "gs://${CONF_BUCKET}"